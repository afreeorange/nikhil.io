# References
# ----------
# https://circleci.com/docs/2.0/language-javascript
# https://pnpm.io/continuous-integration#circleci
# https://circleci.com/developer/orbs/orb/circleci/aws-s3

version: 2.1

orbs:
  aws-s3: circleci/aws-s3@4.0.0

jobs:
  build:
    docker:
      - image: cimg/node:22.2.0
    steps:
      - checkout

      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-9 --activate
            pnpm config set store-dir .pnpm-store

      - run:
          name: Install Dependencies
          command: |
            pnpm install

      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - .pnpm-store

      - run:
          name: Building the site
          command: pnpm build

      - run:
          name: Compressing output
          command: find dist/ -type f -exec gzip -9 "{}" \; -exec mv "{}.gz" "{}" \;

      - aws-s3/sync:
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: dist/
          to: "s3://nikhil.io/"
          arguments: |
            --delete \
            --cache-control max-age=315360000 \
            --content-encoding gzip

      - run:
          name: Invalidating CloudFront distribution
          command: |
            aws cloudfront create-invalidation \
              --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} \
              --paths '/*'
